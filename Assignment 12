package assignmentspackage;

public class fiboassignment {

    public static int fibonacciRecursive(int n) {
        if (n <= 1) {
            return n;
        }
        return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2);
    }

    
    public static int fibonacciIterative(int n) {
        if (n <= 1) return n;

        int prev = 0, curr = 1;
        for (int i = 2; i <= n; i++) {
            int temp = curr;
            curr = curr + prev;
            prev = temp;
        }
        return curr;
    }

    
    public static String decimalToBinaryRecursive(int n) {
        if (n == 0) return "0";
        if (n == 1) return "1";
        return decimalToBinaryRecursive(n / 2) + (n % 2);
    }
    public static String decimalToBinaryIterative(int n) {
        if (n == 0) return "0";
        StringBuilder binary = new StringBuilder();
        while (n > 0) {
            binary.insert(0, n % 2);
            n /= 2;
        }
        return binary.toString();
    }

    public static void main(String[] args) {
        
        int fibIndex = 10;
        System.out.println("The Fibonacci function done in recursive of " + fibIndex + ": " + fibonacciRecursive(fibIndex));
        System.out.println("The Fibonacci function done in iterative of " + fibIndex + ": " + fibonacciIterative(fibIndex));

       
        int decimal = 19;
        System.out.println("The Decimal to Binary in recursive of " + decimal + ": " + decimalToBinaryRecursive(decimal));
        System.out.println("The Decimal to Binary in iterative of  " + decimal + ": " + decimalToBinaryIterative(decimal));
    }
}
