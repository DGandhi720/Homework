public class Automobile {
       private int modelYear;
       private String brand;

   
     public Automobile(int modelYear, String brand) {
        this.modelYear = modelYear;
        this.brand = brand;
    }

    public void honk() {
        System.out.println("Honk-Honk");
    }

    
    public int compareTo(Automobile other) {
        return Integer.compare(this.modelYear, other.modelYear);
    }

    
    
    public String toString() {
        return "Automobile [Brand: " + brand + ", Year: " + modelYear + "]";
    }

    
    
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || getClass() != obj.getClass()) return false;
        Automobile other = (Automobile) obj;
        return modelYear == other.modelYear && brand.equals(other.brand);
    }
}


class Car extends Automobile {
    public Car(int modelYear, String brand) {
        super(modelYear, brand);
    }
    public void accelerate() {
        System.out.println("The Car is accelerating");
    }

    public void stop() {
        System.out.println("The Car is stopping");
    }

    public void reverse() {
        System.out.println("The Car is reversing");
    }

    
    public void honk() {
        System.out.println("The Car Honks");
    }
}


class SportsCar extends Automobile {
    public SportsCar(int modelYear, String brand) {
        super(modelYear, brand);
    }

    
    public void accelerate() {
        System.out.println("SportsCar is speeding up.");
    }

    public void stop() {
        System.out.println("SportsCar is coming to a stop.");
    }

    public void reverse() {
        System.out.println("SportsCar is reversing.");
    }

    
    public void honk() {
        System.out.println("SportsCar is honking.");
    }
}


class JunkCar extends Automobile {
    public JunkCar(int modelYear, String brand) {
        super(modelYear, brand);
    }

    public void accelerate() {
        System.out.println("JunkCar is accelerating.")
    }

    public void stop() {
        System.out.println("JunkCar is stopping.");
    }

    public void reverse() {
        System.out.println("JunkCar is reversing.");
    }

    
    public void honk() {
        System.out.println("JunkCar is honking.");
    }
}


    class Tester {
    public static void main(String[] args) {
        Automobile car = new Car(2020, "Toyota");
        Automobile sportsCar = new SportsCar(2022, "Ferrari");
        Automobile junkCar = new JunkCar(1995, "Chevy");

        
        Automobile[] automobiles = {car, sportsCar, junkCar};


        for (Automobile automobile : automobiles) {
            System.out.println(automobile);
            automobile.honk();
            if (automobile instanceof Car) {
                ((Car) automobile).accelerate();
                ((Car) automobile).stop();
                ((Car) automobile).reverse();
            }
            if (automobile instanceof SportsCar) {
                ((SportsCar) automobile).accelerate();
                ((SportsCar) automobile).stop();
                ((SportsCar) automobile).reverse();
            }
            if (automobile instanceof JunkCar) {
                ((JunkCar) automobile).accelerate();
                ((JunkCar) automobile).stop();
                ((JunkCar) automobile).reverse();
            }
            System.out.println();
        }

      
        System.out.println("Comparison between car and sportsCar: " + car.compareTo(sportsCar));
        System.out.println("Are car and sportsCar equal? " + car.equals(sportsCar));
        System.out.println("Are car and junkCar equal? " + car.equals(junkCar));
      
    }
}
